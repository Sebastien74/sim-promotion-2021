{% extends "admin/base.html.twig" %}

{% import 'core/src-macro.html.twig' as resources %}

{% trans_default_domain 'admin' %}

{% set configFields = ['urls', 'publicationStart', 'publicationEnd', 'titleAlignment', 'subTitlePosition', 'introductionAlignment', 'bodyAlignment', 'targetAlignment'] %}
{% set configsFieldsSet = configFields %}
{% set haveCustomLayout = entity.customLayout is defined and entity.customLayout %}
{% set transDomain = interface.name is defined and interface.name
    ? 'entity_' ~ interface.name : NULL %}

{% if pageTitle is not defined or pageTitle is defined and not pageTitle  %}
    {% set title = 'singular'|trans([], transDomain) and 'singular'|trans([], transDomain) != 'singular'
        ? 'singular'|trans([], transDomain) : 'Edition'|trans ~ " " ~ interface.name  %}
    {% set pageTitle = entity.adminName is defined and entity.adminName ? title ~ ' : ' ~ entity.adminName : title %}
{% endif %}

{% block title %}{{ pageTitle|unescape|raw }}{% endblock %}
{% block pageTitle %}{{ pageTitle|unescape|raw }}{% endblock %}

{% block stylesheets %}

    {{ parent() }}

    {{ resources.encore_absolute_link_tags('admin-catalog', 'admin', true) }}

    {% if haveCustomLayout and is_granted('ROLE_LAYOUT_' ~ interface.name|upper) %}
        {{ resources.encore_absolute_link_tags('admin-layout', 'admin', true) }}
    {% endif %}

{% endblock %}

{% block javascripts %}

    {{ parent() }}

    {{ resources.encore_entry_js_files('admin-catalog', 'admin', 'Catalog') }}

    {% if haveCustomLayout and is_granted('ROLE_LAYOUT_' ~ interface.name|upper) %}
        {{ resources.encore_entry_js_files('admin-layout', 'admin', 'Layout') }}
    {% endif %}

{% endblock %}

{% set tabs = {
    "i18ns": {
        "title": "Description"|trans,
        "icon": "fal fa-align-center"
    },
    "features": {
        "title": "Caractéristiques"|trans,
        "icon": "fal fa-bullseye-pointer"
    },
    "lots": {
        "title": "Lots"|trans,
        "icon": "fal fa-building"
    },
    "configuration": {
        "title": "Configuration"|trans,
        "icon": "fal fa-cog"
    },
    "products": {
        "title": "Produits associés"|trans,
        "icon": "fal fa-album-collection"
    },
    "videos": {
        "title": "Vidéos"|trans,
        "icon": "fal fa-video"
    },
    "information": {
        "title": "Coordonnées"|trans,
        "icon": "fal fa-info-circle"
    },
    "seo": {
        "title": "Référencement"|trans,
        "icon": "fal fa-chart-line"
    }}
%}

{% block body %}

    {% set isProduct = isProduct is defined and entity.catalog is defined and entity.catalog %}
    {% set activeTab = activeTab is defined ? activeTab : null %}
    {% set informationAction = entity.catalog.information is defined ? entity.catalog.information : false %}
    {% set lotsAction = entity.catalog.lots is defined ? entity.catalog.lots : false %}
    {% set featuresGroups = entity|productData %}

    <div id="product-edition" class="card{% if isProduct %} is-product{% endif %}">
        <div class="card-body p-0">

            {% include 'admin/include/stripe-preloader.html.twig' with {'preloaderId': 'product-preloader', 'full': true} only %}

            <ul class="nav nav-tabs custom-tab large" role="tablist">
                {% for tabId, config in tabs %}
                    {% if tabId != 'information' and tabId != 'lots'
                        or tabId == 'information' and informationAction
                        or tabId == 'lots' and lotsAction and is_granted('ROLE_REAL_ESTATE_PROGRAM') %}
                        <li class="nav-item">
                            <a {% if not isProduct %}href="{{ path('admin_catalogproduct_edit', {'website': websiteId, 'catalogproduct': entity.id, 'catalog': entity.catalog.id, "tab": tabId} ) }}"{% endif %}
                               id="nav-{{ tabId }}-tab" class="nav-link{% if activeTab == tabId or not activeTab and loop.first and isProduct %} active{% endif %}"
                               {% if isProduct %}data-toggle="tab" href="#{{ tabId }}" role="tab" aria-selected="{{ loop.first }}"{% else %}data-toggle="preloader"{% endif %}>
                                {{ config.icon|fontawesome(17, 17, 'mr-sm-2') }}
                                <span class="d-none d-sm-inline-block">{{ config.title }}</span>
                            </a>
                        </li>
                    {% endif %}
                {% endfor %}
                <li class="nav-item">
                    <a href="{{ path('admin_catalogproduct_medias', {'website': websiteId, 'catalogproduct': entity.id, 'catalog': entity.catalog.id} ) }}"
                       id="medias-path"
                       class="nav-link{% if not isProduct %} active{% endif %}">
                        {{ 'fal fa-photo-video'|fontawesome(null, 17, 'mr-sm-2') }}
                        <span class="d-none d-sm-inline-block">{{ "Médias"|trans }}</span>
                    </a>
                </li>
                {% if isProduct %}
                    <li class="nav-item right">
                        <span id="save-product" class="nav-link bg-info cursor">
                            <span class="d-none d-sm-inline-block text-white">{{ 'fal fa-save'|fontawesome(16, 17, 'white mr-sm-2') }}<span>{{ "Enregistrer"|trans }}</span></span>
                        </span>
                    </li>
                {% endif %}
            </ul>

            {% block productForm %}{% endblock %}

        </div>
    </div>

    {% if haveCustomLayout and is_granted('ROLE_LAYOUT_' ~ interface.name|upper) %}
        <div id="layout-grid" class="mb-4">
            {% set layout = entity.layout is defined and entity.layout ? entity.layout : null %}
            {% include 'admin/core/layout/zones.html.twig' %}
        </div>
    {% endif %}

    <div id="product-translations"
         data-swal-product-title="{{ "Pensez à enregister vos modifications"|trans }}"
         data-swal-product-text=""
         data-swal-product-cancel-text="{{ "Annuler"|trans }}"
         data-swal-media-confirm-text="{{ "Aller aux médias"|trans }}"
         data-swal-value-confirm-text="{{ "Éditer la valeur"|trans }}">
    </div>

{% endblock %}